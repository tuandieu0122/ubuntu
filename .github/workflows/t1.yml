name: Nexus CLI (2 nodes, persist state)

on:
  workflow_dispatch:
    inputs:
      enable_ssh:
        description: "Open tmate SSH session for this run?"
        required: false
        default: "false"
  schedule:
    - cron: "0 */5 * * *"

permissions:
  contents: read
  actions: read

concurrency:
  group: nexus-duo-singleton
  cancel-in-progress: false

env:
  NODE_ID_1: "36052788"
  NODE_ID_2: "36063227"
  MAX_DIFFICULTY: "small_medium"
  RUN_FOR_SECONDS: "19800"
  WORKFLOW_FILE_NAME: "t1.yml"

jobs:
  nexus:
    runs-on: ubuntu-latest
    timeout-minutes: 355
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download previous state artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: ${{ env.WORKFLOW_FILE_NAME }}
          name: nexus-state
          if_no_artifact_found: ignore

      - name: Restore state
        run: |
          set -euxo pipefail
          if [ -f nexus-state.tar.zst ]; then
            tar --zstd -xf nexus-state.tar.zst -C "$HOME"
          fi
          mkdir -p "$HOME/.nexus"

      - name: Install Nexus CLI
        run: |
          set -euxo pipefail
          curl -sSf https://cli.nexus.xyz/ -o install.sh
          chmod +x install.sh
          NONINTERACTIVE=1 ./install.sh
          nexus-cli --version || true

      - name: Validate Node IDs
        run: |
          set -euxo pipefail
          [ "${NODE_ID_1}" != "PASTE_ID_1" ] && [ -n "${NODE_ID_1}" ] || { echo "❌ Chưa dán NODE_ID_1"; exit 1; }
          [ "${NODE_ID_2}" != "PASTE_ID_2" ] && [ -n "${NODE_ID_2}" ] || { echo "❌ Chưa dán NODE_ID_2"; exit 1; }

      - name: Install helpers (tmux, util-linux)
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y tmux util-linux psmisc

      - name: Start 2 Nexus nodes (tmux)
        env:
          N1: ${{ env.NODE_ID_1 }}
          N2: ${{ env.NODE_ID_2 }}
          MAXDIFF: ${{ env.MAX_DIFFICULTY }}
        run: |
          set -euxo pipefail
          printf '{\n  "node_id": "%s"\n}\n' "$N1" > "$HOME/.nexus/config.json"
          tmux new -s nexus1 -d "taskset -c 0 nexus-cli start --headless --max-difficulty ${MAXDIFF} --node-id ${N1}"
          sleep 3
          printf '{\n  "node_id": "%s"\n}\n' "$N2" > "$HOME/.nexus/config.json"
          tmux new -s nexus2 -d "taskset -c 1 nexus-cli start --headless --max-difficulty ${MAXDIFF} --node-id ${N2}"
          tmux ls || true

      # === OPTIONAL: mở SSH qua tmate khi bạn chạy thủ công và bật enable_ssh ===
      - name: Open SSH (tmate)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.enable_ssh == 'true' }}
        id: tmate
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

      - name: Save SSH endpoints (artifact)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.enable_ssh == 'true' }}
        run: |
          set -eux
          echo "${{ steps.tmate.outputs.ssh }}" > ssh.txt || true
          echo "${{ steps.tmate.outputs.web }}" >> ssh.txt || true

      - name: Upload SSH endpoints
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.enable_ssh == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ssh
          path: ssh.txt
          retention-days: 3

      # === Tiếp tục chạy ~5h30m rồi backup state ===
      - name: Keep running then stop for backup
        env:
          RUN_FOR_SECONDS: ${{ env.RUN_FOR_SECONDS }}
        run: |
          set -eux
          end=$((SECONDS + RUN_FOR_SECONDS))
          while [ $SECONDS -lt $end ]; do
            tmux has-session -t nexus1 2>/dev/null || break
            tmux has-session -t nexus2 2>/dev/null || break
            sleep 60
          done
          tmux kill-session -t nexus1 || true
          tmux kill-session -t nexus2 || true
          pkill -f 'nexus-cli start' || true
          sleep 2

      - name: Save last logs
        run: |
          set -eux
          tmux capture-pane -pt nexus1 2>/dev/null | tail -n 200 > nexus1.log || true
          tmux capture-pane -pt nexus2 2>/dev/null | tail -n 200 > nexus2.log || true

      - name: Upload run logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            nexus1.log
            nexus2.log
          retention-days: 7

      - name: Pack state
        run: |
          set -euxo pipefail
          tar --zstd -cf nexus-state.tar.zst -C "$HOME" .nexus || true

      - name: Upload state artifact
        uses: actions/upload-artifact@v4
        with:
          name: nexus-state
          path: nexus-state.tar.zst
          retention-days: 14
